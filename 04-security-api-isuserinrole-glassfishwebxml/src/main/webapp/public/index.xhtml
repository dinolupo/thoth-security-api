<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    template="../WEB-INF/template_index.xhtml">
    
    <ui:define name="page_references">
        <p>
        </p>
    </ui:define>
    
    <ui:define name="page_name">
        Index
    </ui:define>

    <ui:define name="test_goals">
        <p>
            Can a <code>Prinicpal</code> object be generated
            from <code>HttpServletRequet</code>?  Both name and <b>identity-management groups</b>
            come from <code>HttpServletRequest</code>.  The application uses <b>application-specific
                roles</b> in <code>web.xml</code>.  The <b>identity-management groups</b> are mapped to
            <b>application-specific roles</b> in <code>glassfish-web.xml</code>.
        </p>
    </ui:define>

    <ui:define name="test_results">
        <p>
            <b>Yes!</b>
        </p>
        <p>
            It is important to note the interaction between the <b>identity-management groups</b>
            and the <b>application-specific roles</b>!
        </p>
        <p>
            When <code>TestHttpAuthenticationMechanism.java</code> gets the data for the
            <code>Principal</code> it uses the <b>identity-management groups</b>.  These 
            are the groups defined in <code>glassfish-web.xml</code>
        </p>
        <p>
            However, when the application checks permissions with <code>#isUserInRole(<b>role</b>)</code>,
            the value passed to <code>#isUserInRole(<b>role</b>)</code> is the
            <b>application-specific role</b>.
        </p>
        <p>
            Therefore, in order for <code>#isUserInRole(<b>role</b>)</code> to return
            <code>true</code> the application must have:
        </p>
        <ol>
            <li>The <b>application-specific role</b> defined in web.xml</li>
            <li><code>#isUserInRole(<b>role</b>)</code> must use the <b>application-specific role</b></li>
            <li><code>TestHttpAuthenticationMechanism.java</code> creates a <code>Principal</code> 
                using the <b>identity-management groups</b></li>
            <li><code>glassfish-web.xml</code> must have a mapping between the <b>identity-management group</b>
                and the <b>application-specific role</b>.</li>
        </ol>
        <p>
            Try it out for yourself!
        </p>
        <blockquote>
            <p>
                <b>NOTE #1:</b> If you assign the <code>group_not_in_glassfish-web_xml</code> 
                <b>identity-management group</b> to your <code>Principal</code>, 
                the <code>#isUserInRole(<b>role</b>)</code> call will return <code>false</code>
                because even though <code>TryMeRole</code> is in <code>web.xml</code>,
                there is no mapping of <code>TryMeRole</code> and <code>group_not_in_glassfish-web_xml</code>
                in <code>glassfish-web.xml</code>.
            </p>
            <p>
                <b>NOTE #2:</b> If you assign the <code>GROUP_TRY_ME</code> 
                <b>identity-management group</b> to your <code>Principal</code>, 
                the <code>#isUserInRole(<b>role</b>)</code> call will return <code>false</code>
                because even though <code>GROUP_TRY_ME</code> is mapped to <code>NotInWebXmlRole</code>
                in <code>glassfish-web.xml</code>, the <code>NotInWebXmlRole</code> does not exist
                in <code>web.xml</code>
            </p> 
        </blockquote>
        
        <h:form  prependId="false">
            <h:panelGrid columns="2">
                <h:outputLabel for="name">Principal Name:</h:outputLabel>
                <h:inputText id="name" value="#{principalInput.name}"/>
                
                <h:outputLabel for="identityManagementGroups">Identity-management groups (comma separated):</h:outputLabel>
                <h:inputText id="identityManagementGroups" value="#{principalInput.identityManagementGroups}" style="width:500px;"/>
            </h:panelGrid>
            <h:commandButton value="Go" action="#{principalController.go}" />
        </h:form>

    </ui:define>

</ui:composition>
