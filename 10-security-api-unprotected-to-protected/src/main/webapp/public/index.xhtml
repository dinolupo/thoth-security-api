<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    template="../WEB-INF/template_index.xhtml">

    <ui:define name="page_references">
        <p>
            Java EE 5 Tutorial.  (n.d.).  Retrieved from 
            <a href="https://docs.oracle.com/cd/E19575-01/819-3669/bncbk/index.html">
                https://docs.oracle.com/cd/E19575-01/819-3669/bncbk/index.html</a>
        </p>
    </ui:define>

    <ui:define name="page_name">
        Index
    </ui:define>

    <ui:define name="test_goals">
        <p>
            If the application has a public 
            servlet that attempts to forward to either a protected servlet or JSP, 
            will the forward request be denied?
        </p>
    </ui:define>

    <ui:define name="test_results">
        <p>
            <b>NO!</b>
        </p>
        <p>
            Server-side forwards and includes do not go through the normal security checks.
            This is by design.  The Java EE tutorial says the following:
        </p>
        <blockquote>
            <p style="font-style:italic;">
                "Security constraints work only on the original request URI and not on calls made through 
                a <span class="code">RequestDispatcher</span> (which include 
                <span class="code">&lt;jsp:include&gt;</span>
                and 
                <span class="code">&lt;jsp:forward&gt;</span>). 
                Inside the application, it is assumed that the application itself has complete 
                access to all resources and would not forward a user request unless it had decided 
                that the requesting user also had access."
            </p>
        </blockquote>

        <p>
            The following link is to the <code>AboutUsServlet</code>.  It has no security constraints so is accessible
            to everyone.  Internally, <code>AboutUsServlet</code> does a 
            <code>RequestDispatcher#include()</code> to the <code>ExecutiveServlet</code>, which does
            have security constraints and is protected by <code>ExecutiveRole</code>.  However,
            the server-side <code>RequestDispatcher#include()</code> to the <code>ExecutiveServlet</code>
            is not denied so you will see its response.
        </p>
        <p>
            <h:outputLink value="#{request.contextPath}/aboutus/servlet">
                Link to AboutUsServlet is allowed to everyone, and can include ExecutiveServlet...
            </h:outputLink>
        </p>

        <p>
            However, If you try to link directly to the <code>ExecutiveServlet</code>, 
            you will be forbidden access.
        </p>
        <p>
            <h:outputLink value="#{request.contextPath}/executive/servlet">
                Link to ExecutiveServlet is forbidden...
            </h:outputLink>
        </p>
    </ui:define>

</ui:composition>
