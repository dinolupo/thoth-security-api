<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    template="../WEB-INF/template_index.xhtml">

    <ui:define name="page_references">
        <p>
        </p>
    </ui:define>
    
    <ui:define name="page_name">
        Index
    </ui:define>

    <ui:define name="test_goals">
        <p>
            Can there be a servlet that's protected 
            which is accessible only by a certain <b>application-specific role</b>?  The servlet 
            is protected by <code>@ServletSecurity</code>.  
            The application uses 
            <b>application-specific roles</b> in <code>@DeclareRoles</code>.  The 
            <b>identity-management groups</b> are 
            mapped to <b>application-specific roles</b> in <code>glassfish-web.xml</code>.
            <code>web.xml</code> is essentially empty.
        </p>
    </ui:define>

    <ui:define name="test_results">
        <p>
            <b>Yes!</b>
        </p>
        <p>
            If you look in the
            <i>Prinicpal/Role Information</i> section below, you will see that you do not have
            the <code>ExecutiveRole</code> role.  Therefore, clicking the following link to 
            the <code>ExecutiveServlet</code>
            will fail with a 403 Forbidden error code.
        </p>

        <p>
            <p>
                <h:outputLink value="#{request.contextPath}/executive/servlet">
                    Link to ExecutiveServlet is forbidden...
                </h:outputLink>
            </p>
        </p>
        <p>
            <b>Note</b>
        </p>
        <p>
            <code>TestHttpAuthenticationMechanism.java</code> uses the
            the <b>identity-management groups</b> when creating
            the <code>Principal</code>.  
            <code>@ServletSecurity</code> uses
            the <b>application-specific roles</b> in <code>@DeclareRoles</code>.
            Security works because <code>glassfish-web.xml</code> 
            maps everything together.
        </p>
    </ui:define>

</ui:composition>
