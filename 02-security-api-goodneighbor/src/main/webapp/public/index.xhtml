<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    template="../WEB-INF/template_index.xhtml">

    <ui:define name="page_references">
        <p>
        app-securitycontext-customprincipal.  (n.d.).  Retrieved from
        <a href="https://github.com/javaee/security-soteria/tree/116eb9326eca72e8c0f6665221b7b9c6a71f3b98/test/app-securitycontext-customprincipal">
                 https://github.com/javaee/security-soteria/tree/116eb9326eca72e8c0f6665221b7b9c6a71f3b98/test/app-securitycontext-customprincipal</a>
    </p>
    </ui:define>
    
    
    <ui:define name="page_name">
        Index
    </ui:define>
    
    <ui:define name="test_goals">
        <p>
            When EE Security is being used by a WAR, 
            will it protect only the WAR it's in or every WAR 
            deployed to the server?
        </p>
    </ui:define>
    
    <ui:define name="test_results">
        <p>
            <b>Only this WAR!</b>
        </p>
        <p>
            JASPIC is really low-level and depending on how you register
            the <code>AuthConfigProvider</code> with the <code>AuthConfigFactory</code>,
            you can protect just the WAR the JASPIC code is in, every WAR
            deployed to the server, or one of the WARs deployed to the server.
            EE Security, however, doesn't work this way.
        </p>
        <p>
            By default, when EE Security is used by a WAR, EE Security
            protects only that WAR.  Unlike
            JASPIC, there is no way (as of this writing August, 2017) to configure the 
            Security API to protect other other WARs on the server.            
        </p>
        <p>
            To test this, below you will see output from the logs of 
            <code>TestHttpAuthenticationMechanism</code>, which is used by this WAR.
            However, if you browse to
            <h:outputLink value="/#{applicationController.helloWorldTitle}/">#{applicationController.helloWorldTitle}</h:outputLink>
            and <code>tail</code> the log files (see above the location
            of the log files) you see no Security API code executes for either
            of of these applications.  
        </p>
        <p>
            Log file results
        </p>
        <blockquote>
            <pre style="font-family:monospace; overflow:scroll; border: 1px solid black;">#{testHttpAuthenticationMechanism.buffer}</pre>
        </blockquote>
        
    </ui:define>
        
</ui:composition>
