<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    template="../WEB-INF/template_index.xhtml">

    <ui:define name="page_references">
        <p>
            Chapter 2. JSF web application example.  (n.d.)  
            Retrieved from
            <a href="https://docs.jboss.org/webbeans/reference/current/en-US/html/example.html">
                https://docs.jboss.org/webbeans/reference/current/en-US/html/example.html
            </a>

        </p>
        <p>
            BalusC. (2013, April 9).  How to specify name attribute in h:inputText?.
            Retrieved from
            <a href="https://stackoverflow.com/questions/15893876/how-to-specify-name-attribute-in-hinputtext">
                https://stackoverflow.com/questions/15893876/how-to-specify-name-attribute-in-hinputtext
            </a>
        </p>
    </ui:define>

    <ui:define name="page_name">
        Index
    </ui:define>

    <ui:define name="test_goals">
        <p>
            Can a <code>Principal</code> object be generated
            from <code>HttpServletRequest</code>?  No roles, just a 
            <code>Principal</code> with a given name?
        </p>
    </ui:define>

    <ui:define name="test_results">
        <p>
            <b>Yes!</b>
        </p>
        <p>
            Below in the <i>Principal/Role Information</i> section,
            you can see the <code>Principal</code> name.  Submit
            the form below to change the principal's name.  After submitting
            the form, the page will refresh and you'll see the 
            <code>Principal</code> name update.  It is important to note 
            the <code>Principal</code> name is actually coming from the
            <code>Principal</code> object!  It's not just a JSF bean with
            a stored query parameter.  That is the actual Java EE server
            <code>Principal</code> object.
        </p>

        <h:form  prependId="false">
            <h:panelGrid columns="2">
                <h:outputLabel for="name">Principal Name:</h:outputLabel>
                <h:inputText id="name" value="#{principalInput.name}"/>
            </h:panelGrid>
            <h:commandButton value="Set Name" action="#{principalController.setName}" />
        </h:form>

    </ui:define>

</ui:composition>
